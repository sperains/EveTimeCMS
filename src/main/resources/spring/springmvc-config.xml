<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd ">


    <!-- 自动扫描指定包下的java类文件 -->
    <context:component-scan base-package="com.evetime" />

    <!--  解决使用@ResponseBody后返回到前台的Json中中文乱码-->
    <mvc:annotation-driven >
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!-- 指示哪些静态资源需要单独处理，不通过DispatcherServlet -->
    <mvc:resources mapping="/lbClassicStatus" location="/" />
    <mvc:resources mapping="/*.html" location="/" />
    <mvc:resources mapping="/admin-dashboard/**" location="/admin-dashboard/" />
    <mvc:resources mapping="/build/**" location="/build/" />
    <mvc:resources mapping="/upload/**" location="/upload/" />
    <mvc:resources mapping="/ext/**" location="/ext/" />
    <mvc:resources mapping="/*.jsp" location="/" />
    <mvc:resources mapping="/*.js" location="/" />
    <mvc:resources mapping="/*.json" location="/" />
    <mvc:resources mapping="/classic/**" location="/classic/" />
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <mvc:default-servlet-handler/>



    <bean id="clientConfiguration" class="com.aliyun.oss.ClientConfiguration">
        <property name="maxConnections" value="1024"></property><!-- 允许打开的最大HTTP连接数。默认为1024 -->
        <property name="socketTimeout" value="50000"></property><!-- 打开连接传输数据的超时时间（单位：毫秒）。默认为50000毫秒 -->
        <property name="connectionTimeout" value="50000"></property><!--  建立连接的超时时间（单位：毫秒）。默认为50000毫秒  -->
        <property name="maxErrorRetry" value="3"></property><!-- 可重试的请求失败后最大的重试次数。默认为3次 -->
    </bean>

    <bean id="client" class="com.aliyun.oss.OSSClient">
        <constructor-arg type="java.lang.String" value="http://oss-cn-shenzhen.aliyuncs.com"/>
        <constructor-arg type="java.lang.String" value="cdHcf9jrLxekYESw"/>
        <constructor-arg type="java.lang.String" value="OGKnxXh8xgAI1TBcg8THOW1TqOUX6w"/>
        <constructor-arg type="com.aliyun.oss.ClientConfiguration" ref="clientConfiguration"/>
    </bean>

    <!-- 上传文件配置 start-->
    <!--<bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8"
          p:maxUploadSize="5000000"
          p:uploadTempDir="temp"/>-->
    <!-- 上传文件配置 end-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        &lt;!&ndash; 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 &ndash;&gt;
        <property name="maxUploadSize" value="2000000"/>
        &lt;!&ndash; 最大内存大小 (10240)&ndash;&gt;
        <property name="maxInMemorySize" value="409600" />
    </bean>
-->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>

        <property name="url" value="jdbc:mysql://120.24.252.224:3306/meishitwo"></property>
        <property name="username" value="meishi"></property>
        <property name="password" value="meishi"></property>
        <!--<property name="url" value="jdbc:mysql://192.168.31.112:3306/meishiyundb"></property>
        <property name="username" value="xiongxin"></property>
        <property name="password" value="xiongxin"></property>-->
    </bean>

    <!--<bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:test/sql/*.xml"/>
    </bean>

    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactory" ref="factory"/>
        &lt;!&ndash; 注入Mapper接口,value指定接口路径 &ndash;&gt;
        <property name="basePackage" value="test.dao"/>
    </bean>-->



    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--配置基于注解的声明式事务 默认使用注解来管理事务行为-->
    <!-- <tx:annotation-driven/>-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:aspectj-autoproxy />

</beans>